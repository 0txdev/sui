---
source: crates/sui/tests/ptb_files_tests.rs
expression: "results.join(\"\\n\")"
---
 === PREVIEW === 
╭───────────────────────────────────────────────────────────────────────────────────────────────────────╮
│ PTB Preview                                                                                           │
├──────────────────┬─────────────────────────────────────────────────────────────┬──────────────────────┤
│ command          │ from                                                        │ value(s)             │
├──────────────────┼─────────────────────────────────────────────────────────────┼──────────────────────┤
│ gas_budget       │ tests/ptb_files/transfer_objects/transfer_objects_valid.ptb │ 10000000             │
│ split_coins      │ tests/ptb_files/transfer_objects/transfer_objects_valid.ptb │ gas [1,2,3]          │
│ assign           │ tests/ptb_files/transfer_objects/transfer_objects_valid.ptb │ s                    │
│ transfer_objects │ tests/ptb_files/transfer_objects/transfer_objects_valid.ptb │ @0x1 [s.0, s.1, s.2] │
│ preview          │ console                                                     │ true                 │
╰──────────────────┴─────────────────────────────────────────────────────────────┴──────────────────────╯
 === PARSED INPUT COMMANDS === 
cmd: GasBudget(Spanned { span: Span { start: 0, end: 8, arg_idx: 0, file_scope: FileScope { file_command_index: 0, name: "tests/ptb_files/transfer_objects/transfer_objects_valid.ptb", name_index: 0 } }, value: 10000000 })
cmd: SplitCoins(Spanned { span: Span { start: 0, end: 3, arg_idx: 0, file_scope: FileScope { file_command_index: 1, name: "tests/ptb_files/transfer_objects/transfer_objects_valid.ptb", name_index: 0 } }, value: Gas }, Spanned { span: Span { start: 0, end: 7, arg_idx: 1, file_scope: FileScope { file_command_index: 1, name: "tests/ptb_files/transfer_objects/transfer_objects_valid.ptb", name_index: 0 } }, value: [Spanned { span: Span { start: 1, end: 2, arg_idx: 1, file_scope: FileScope { file_command_index: 1, name: "tests/ptb_files/transfer_objects/transfer_objects_valid.ptb", name_index: 0 } }, value: U64(1) }, Spanned { span: Span { start: 3, end: 4, arg_idx: 1, file_scope: FileScope { file_command_index: 1, name: "tests/ptb_files/transfer_objects/transfer_objects_valid.ptb", name_index: 0 } }, value: U64(2) }, Spanned { span: Span { start: 5, end: 6, arg_idx: 1, file_scope: FileScope { file_command_index: 1, name: "tests/ptb_files/transfer_objects/transfer_objects_valid.ptb", name_index: 0 } }, value: U64(3) }] })
cmd: Assign(Spanned { span: Span { start: 0, end: 1, arg_idx: 0, file_scope: FileScope { file_command_index: 2, name: "tests/ptb_files/transfer_objects/transfer_objects_valid.ptb", name_index: 0 } }, value: "s" }, None)
cmd: TransferObjects(Spanned { span: Span { start: 1, end: 4, arg_idx: 0, file_scope: FileScope { file_command_index: 3, name: "tests/ptb_files/transfer_objects/transfer_objects_valid.ptb", name_index: 0 } }, value: Address(0x1) }, Spanned { span: Span { start: 0, end: 15, arg_idx: 1, file_scope: FileScope { file_command_index: 3, name: "tests/ptb_files/transfer_objects/transfer_objects_valid.ptb", name_index: 0 } }, value: [Spanned { span: Span { start: 1, end: 4, arg_idx: 1, file_scope: FileScope { file_command_index: 3, name: "tests/ptb_files/transfer_objects/transfer_objects_valid.ptb", name_index: 0 } }, value: VariableAccess(Spanned { span: Span { start: 1, end: 2, arg_idx: 1, file_scope: FileScope { file_command_index: 3, name: "tests/ptb_files/transfer_objects/transfer_objects_valid.ptb", name_index: 0 } }, value: "s" }, [Spanned { span: Span { start: 3, end: 4, arg_idx: 1, file_scope: FileScope { file_command_index: 3, name: "tests/ptb_files/transfer_objects/transfer_objects_valid.ptb", name_index: 0 } }, value: "0" }]) }, Spanned { span: Span { start: 6, end: 9, arg_idx: 1, file_scope: FileScope { file_command_index: 3, name: "tests/ptb_files/transfer_objects/transfer_objects_valid.ptb", name_index: 0 } }, value: VariableAccess(Spanned { span: Span { start: 6, end: 7, arg_idx: 1, file_scope: FileScope { file_command_index: 3, name: "tests/ptb_files/transfer_objects/transfer_objects_valid.ptb", name_index: 0 } }, value: "s" }, [Spanned { span: Span { start: 8, end: 9, arg_idx: 1, file_scope: FileScope { file_command_index: 3, name: "tests/ptb_files/transfer_objects/transfer_objects_valid.ptb", name_index: 0 } }, value: "1" }]) }, Spanned { span: Span { start: 11, end: 14, arg_idx: 1, file_scope: FileScope { file_command_index: 3, name: "tests/ptb_files/transfer_objects/transfer_objects_valid.ptb", name_index: 0 } }, value: VariableAccess(Spanned { span: Span { start: 11, end: 12, arg_idx: 1, file_scope: FileScope { file_command_index: 3, name: "tests/ptb_files/transfer_objects/transfer_objects_valid.ptb", name_index: 0 } }, value: "s" }, [Spanned { span: Span { start: 13, end: 14, arg_idx: 1, file_scope: FileScope { file_command_index: 3, name: "tests/ptb_files/transfer_objects/transfer_objects_valid.ptb", name_index: 0 } }, value: "2" }]) }] })
cmd: Preview(Spanned { span: Span { start: 0, end: 5, arg_idx: 0, file_scope: FileScope { file_command_index: 4, name: "tests/ptb_files/transfer_objects/transfer_objects_valid.ptb", name_index: 0 } }, value: Bool(false) })
cmd: WarnShadows(Spanned { span: Span { start: 0, end: 5, arg_idx: 0, file_scope: FileScope { file_command_index: 5, name: "tests/ptb_files/transfer_objects/transfer_objects_valid.ptb", name_index: 0 } }, value: Bool(false) })
cmd: Preview(Spanned { span: Span { start: 0, end: 4, arg_idx: 0, file_scope: FileScope { file_command_index: 1, name: "console", name_index: 0 } }, value: Bool(true) })
cmd: WarnShadows(Spanned { span: Span { start: 0, end: 5, arg_idx: 0, file_scope: FileScope { file_command_index: 2, name: "console", name_index: 0 } }, value: Bool(false) })
 === BUILT PTB === 
Input 0: Pure([1, 0, 0, 0, 0, 0, 0, 0])
Input 1: Pure([2, 0, 0, 0, 0, 0, 0, 0])
Input 2: Pure([3, 0, 0, 0, 0, 0, 0, 0])
Input 3: Pure([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1])
Command 0: SplitCoins(GasCoinInput(0),Input(1),Input(2))
Command 1: TransferObjects([NestedResult(0,0),NestedResult(0,1),NestedResult(0,2)],Input(3))
