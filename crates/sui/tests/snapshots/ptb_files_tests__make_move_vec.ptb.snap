---
source: crates/sui/tests/ptb_files_tests.rs
expression: "results.join(\"\\n\")"
---
 === PREVIEW === 
╭───────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
│ PTB Preview                                                                                                       │
├───────────────┬─────────────────────────────────────────────────┬─────────────────────────────────────────────────┤
│ command       │ from                                            │ value(s)                                        │
├───────────────┼─────────────────────────────────────────────────┼─────────────────────────────────────────────────┤
│ gas_budget    │ tests/ptb_files/make_move_vec/make_move_vec.ptb │ 1000                                            │
│ make_move_vec │ tests/ptb_files/make_move_vec/make_move_vec.ptb │ <u64> [1, 2,3, 4]                               │
│ make_move_vec │ tests/ptb_files/make_move_vec/make_move_vec.ptb │ <u64> []                                        │
│ make_move_vec │ tests/ptb_files/make_move_vec/make_move_vec.ptb │ <0x1::a::b> [@0x1,@0x2]                         │
│ make_move_vec │ tests/ptb_files/make_move_vec/make_move_vec.ptb │ <address> [@0x1,@0x2]                           │
│ make_move_vec │ tests/ptb_files/make_move_vec/make_move_vec.ptb │ <vector<address>> [vector[@0x1],vector[@0x2]]   │
│ make_move_vec │ tests/ptb_files/make_move_vec/make_move_vec.ptb │ <std::option::Option<u64>> [none,none]          │
│ make_move_vec │ tests/ptb_files/make_move_vec/make_move_vec.ptb │ <std::option::Option<u64>> [none,none]          │
│ make_move_vec │ tests/ptb_files/make_move_vec/make_move_vec.ptb │ <std::option::Option<u64>> [none,some(1)]       │
│ make_move_vec │ tests/ptb_files/make_move_vec/make_move_vec.ptb │ <std::option::Option<u64>> [none,some(some(1))] │
│ make_move_vec │ tests/ptb_files/make_move_vec/make_move_vec.ptb │ <sui::coin::Coin<sui::sui::SUI>> [gas]          │
│ preview       │ console                                         │ true                                            │
╰───────────────┴─────────────────────────────────────────────────┴─────────────────────────────────────────────────╯
 === PARSED INPUT COMMANDS === 
cmd: GasBudget(Spanned { span: Span { start: 0, end: 4, arg_idx: 0, file_scope: FileScope { file_command_index: 0, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: 1000 })
cmd: MakeMoveVec(Spanned { span: Span { start: 0, end: 5, arg_idx: 0, file_scope: FileScope { file_command_index: 1, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: U64 }, Spanned { span: Span { start: 0, end: 11, arg_idx: 1, file_scope: FileScope { file_command_index: 1, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: [Spanned { span: Span { start: 1, end: 2, arg_idx: 1, file_scope: FileScope { file_command_index: 1, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: U64(1) }, Spanned { span: Span { start: 4, end: 5, arg_idx: 1, file_scope: FileScope { file_command_index: 1, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: U64(2) }, Spanned { span: Span { start: 6, end: 7, arg_idx: 1, file_scope: FileScope { file_command_index: 1, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: U64(3) }, Spanned { span: Span { start: 9, end: 10, arg_idx: 1, file_scope: FileScope { file_command_index: 1, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: U64(4) }] })
cmd: MakeMoveVec(Spanned { span: Span { start: 0, end: 5, arg_idx: 0, file_scope: FileScope { file_command_index: 2, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: U64 }, Spanned { span: Span { start: 0, end: 2, arg_idx: 1, file_scope: FileScope { file_command_index: 2, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: [] })
cmd: MakeMoveVec(Spanned { span: Span { start: 0, end: 11, arg_idx: 0, file_scope: FileScope { file_command_index: 3, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: Struct(ParsedStructType { fq_name: ParsedFqName { module: ParsedModuleId { address: Numerical(0x1), name: "a" }, name: "b" }, type_args: [] }) }, Spanned { span: Span { start: 0, end: 11, arg_idx: 1, file_scope: FileScope { file_command_index: 3, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: [Spanned { span: Span { start: 2, end: 5, arg_idx: 1, file_scope: FileScope { file_command_index: 3, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: Address(0x1) }, Spanned { span: Span { start: 7, end: 10, arg_idx: 1, file_scope: FileScope { file_command_index: 3, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: Address(0x2) }] })
cmd: MakeMoveVec(Spanned { span: Span { start: 0, end: 9, arg_idx: 0, file_scope: FileScope { file_command_index: 4, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: Address }, Spanned { span: Span { start: 0, end: 11, arg_idx: 1, file_scope: FileScope { file_command_index: 4, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: [Spanned { span: Span { start: 2, end: 5, arg_idx: 1, file_scope: FileScope { file_command_index: 4, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: Address(0x1) }, Spanned { span: Span { start: 7, end: 10, arg_idx: 1, file_scope: FileScope { file_command_index: 4, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: Address(0x2) }] })
cmd: MakeMoveVec(Spanned { span: Span { start: 0, end: 17, arg_idx: 0, file_scope: FileScope { file_command_index: 5, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: Vector(Address) }, Spanned { span: Span { start: 0, end: 27, arg_idx: 1, file_scope: FileScope { file_command_index: 5, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: [Spanned { span: Span { start: 7, end: 13, arg_idx: 1, file_scope: FileScope { file_command_index: 5, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: Vector([Spanned { span: Span { start: 9, end: 12, arg_idx: 1, file_scope: FileScope { file_command_index: 5, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: Address(0x1) }]) }, Spanned { span: Span { start: 20, end: 26, arg_idx: 1, file_scope: FileScope { file_command_index: 5, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: Vector([Spanned { span: Span { start: 22, end: 25, arg_idx: 1, file_scope: FileScope { file_command_index: 5, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: Address(0x2) }]) }] })
cmd: MakeMoveVec(Spanned { span: Span { start: 0, end: 26, arg_idx: 0, file_scope: FileScope { file_command_index: 6, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: Struct(ParsedStructType { fq_name: ParsedFqName { module: ParsedModuleId { address: Named("std"), name: "option" }, name: "Option" }, type_args: [U64] }) }, Spanned { span: Span { start: 0, end: 11, arg_idx: 1, file_scope: FileScope { file_command_index: 6, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: [Spanned { span: Span { start: 1, end: 5, arg_idx: 1, file_scope: FileScope { file_command_index: 6, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: Option(Spanned { span: Span { start: 1, end: 5, arg_idx: 1, file_scope: FileScope { file_command_index: 6, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: None }) }, Spanned { span: Span { start: 6, end: 10, arg_idx: 1, file_scope: FileScope { file_command_index: 6, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: Option(Spanned { span: Span { start: 6, end: 10, arg_idx: 1, file_scope: FileScope { file_command_index: 6, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: None }) }] })
cmd: MakeMoveVec(Spanned { span: Span { start: 0, end: 26, arg_idx: 0, file_scope: FileScope { file_command_index: 7, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: Struct(ParsedStructType { fq_name: ParsedFqName { module: ParsedModuleId { address: Named("std"), name: "option" }, name: "Option" }, type_args: [U64] }) }, Spanned { span: Span { start: 0, end: 11, arg_idx: 1, file_scope: FileScope { file_command_index: 7, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: [Spanned { span: Span { start: 1, end: 5, arg_idx: 1, file_scope: FileScope { file_command_index: 7, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: Option(Spanned { span: Span { start: 1, end: 5, arg_idx: 1, file_scope: FileScope { file_command_index: 7, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: None }) }, Spanned { span: Span { start: 6, end: 10, arg_idx: 1, file_scope: FileScope { file_command_index: 7, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: Option(Spanned { span: Span { start: 6, end: 10, arg_idx: 1, file_scope: FileScope { file_command_index: 7, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: None }) }] })
cmd: MakeMoveVec(Spanned { span: Span { start: 0, end: 26, arg_idx: 0, file_scope: FileScope { file_command_index: 8, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: Struct(ParsedStructType { fq_name: ParsedFqName { module: ParsedModuleId { address: Named("std"), name: "option" }, name: "Option" }, type_args: [U64] }) }, Spanned { span: Span { start: 0, end: 14, arg_idx: 1, file_scope: FileScope { file_command_index: 8, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: [Spanned { span: Span { start: 1, end: 5, arg_idx: 1, file_scope: FileScope { file_command_index: 8, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: Option(Spanned { span: Span { start: 1, end: 5, arg_idx: 1, file_scope: FileScope { file_command_index: 8, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: None }) }, Spanned { span: Span { start: 6, end: 13, arg_idx: 1, file_scope: FileScope { file_command_index: 8, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: Option(Spanned { span: Span { start: 11, end: 12, arg_idx: 1, file_scope: FileScope { file_command_index: 8, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: Some(U64(1)) }) }] })
cmd: MakeMoveVec(Spanned { span: Span { start: 0, end: 26, arg_idx: 0, file_scope: FileScope { file_command_index: 9, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: Struct(ParsedStructType { fq_name: ParsedFqName { module: ParsedModuleId { address: Named("std"), name: "option" }, name: "Option" }, type_args: [U64] }) }, Spanned { span: Span { start: 0, end: 20, arg_idx: 1, file_scope: FileScope { file_command_index: 9, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: [Spanned { span: Span { start: 1, end: 5, arg_idx: 1, file_scope: FileScope { file_command_index: 9, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: Option(Spanned { span: Span { start: 1, end: 5, arg_idx: 1, file_scope: FileScope { file_command_index: 9, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: None }) }, Spanned { span: Span { start: 6, end: 19, arg_idx: 1, file_scope: FileScope { file_command_index: 9, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: Option(Spanned { span: Span { start: 11, end: 18, arg_idx: 1, file_scope: FileScope { file_command_index: 9, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: Some(Option(Spanned { span: Span { start: 16, end: 17, arg_idx: 1, file_scope: FileScope { file_command_index: 9, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: Some(U64(1)) })) }) }] })
cmd: MakeMoveVec(Spanned { span: Span { start: 0, end: 32, arg_idx: 0, file_scope: FileScope { file_command_index: 10, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: Struct(ParsedStructType { fq_name: ParsedFqName { module: ParsedModuleId { address: Named("sui"), name: "coin" }, name: "Coin" }, type_args: [Struct(ParsedStructType { fq_name: ParsedFqName { module: ParsedModuleId { address: Named("sui"), name: "sui" }, name: "SUI" }, type_args: [] })] }) }, Spanned { span: Span { start: 0, end: 5, arg_idx: 1, file_scope: FileScope { file_command_index: 10, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: [Spanned { span: Span { start: 1, end: 4, arg_idx: 1, file_scope: FileScope { file_command_index: 10, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: Gas }] })
cmd: Preview(Spanned { span: Span { start: 0, end: 5, arg_idx: 0, file_scope: FileScope { file_command_index: 11, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: Bool(false) })
cmd: WarnShadows(Spanned { span: Span { start: 0, end: 5, arg_idx: 0, file_scope: FileScope { file_command_index: 12, name: "tests/ptb_files/make_move_vec/make_move_vec.ptb", name_index: 0 } }, value: Bool(false) })
cmd: Preview(Spanned { span: Span { start: 0, end: 4, arg_idx: 0, file_scope: FileScope { file_command_index: 1, name: "console", name_index: 0 } }, value: Bool(true) })
cmd: WarnShadows(Spanned { span: Span { start: 0, end: 5, arg_idx: 0, file_scope: FileScope { file_command_index: 2, name: "console", name_index: 0 } }, value: Bool(false) })
 === BUILT PTB === 
Input 0: Pure([1, 0, 0, 0, 0, 0, 0, 0])
Input 1: Pure([2, 0, 0, 0, 0, 0, 0, 0])
Input 2: Pure([3, 0, 0, 0, 0, 0, 0, 0])
Input 3: Pure([4, 0, 0, 0, 0, 0, 0, 0])
Input 4: ImmutableOrOwnedObject
Input 5: ImmutableOrOwnedObject
Input 6: Pure([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1])
Input 7: Pure([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2])
Input 8: Pure([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1])
Input 9: Pure([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2])
Input 10: Pure([0])
Input 11: Pure([1, 1, 0, 0, 0, 0, 0, 0, 0])
Input 12: Pure([1, 1, 1, 0, 0, 0, 0, 0, 0, 0])
Command 0: MakeMoveVec(Someu64,[Input(0),Input(1),Input(2),Input(3)])
Command 1: MakeMoveVec(Someu64,[])
Command 2: MakeMoveVec(Some0x1::a::b,[Input(4),Input(5)])
Command 3: MakeMoveVec(Someaddress,[Input(6),Input(7)])
Command 4: MakeMoveVec(Somevector<address>,[Input(8),Input(9)])
Command 5: MakeMoveVec(Some0x1::option::Option<u64>,[Input(10),Input(10)])
Command 6: MakeMoveVec(Some0x1::option::Option<u64>,[Input(10),Input(10)])
Command 7: MakeMoveVec(Some0x1::option::Option<u64>,[Input(10),Input(11)])
Command 8: MakeMoveVec(Some0x1::option::Option<u64>,[Input(10),Input(12)])
Command 9: MakeMoveVec(Some0x2::coin::Coin<0x2::sui::SUI>,[GasCoin])
