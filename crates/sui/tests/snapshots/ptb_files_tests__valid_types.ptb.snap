---
source: crates/sui/tests/ptb_files_tests.rs
expression: "results.join(\"\\n\")"
---
 === PREVIEW === 
╭─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
│ PTB Preview                                                                                                             │
├───────────────┬─────────────────────────────────────────┬───────────────────────────────────────────────────────────────┤
│ command       │ from                                    │ value(s)                                                      │
├───────────────┼─────────────────────────────────────────┼───────────────────────────────────────────────────────────────┤
│ make_move_vec │ tests/ptb_files/parsing/valid_types.ptb │ <address> [@0x1]                                              │
│ make_move_vec │ tests/ptb_files/parsing/valid_types.ptb │ <bool> [true, false]                                          │
│ make_move_vec │ tests/ptb_files/parsing/valid_types.ptb │ <u8> [0]                                                      │
│ make_move_vec │ tests/ptb_files/parsing/valid_types.ptb │ <u16> [0]                                                     │
│ make_move_vec │ tests/ptb_files/parsing/valid_types.ptb │ <u32> [0]                                                     │
│ make_move_vec │ tests/ptb_files/parsing/valid_types.ptb │ <u64> [0]                                                     │
│ make_move_vec │ tests/ptb_files/parsing/valid_types.ptb │ <u128> [0]                                                    │
│ make_move_vec │ tests/ptb_files/parsing/valid_types.ptb │ <u256> [0]                                                    │
│ make_move_vec │ tests/ptb_files/parsing/valid_types.ptb │ <vector<u8>> [vector[0]]                                      │
│ make_move_vec │ tests/ptb_files/parsing/valid_types.ptb │ <vector<u256>> [vector[0]]                                    │
│ assign        │ tests/ptb_files/parsing/valid_types.ptb │ a 0u8                                                         │
│ assign        │ tests/ptb_files/parsing/valid_types.ptb │ b 0u16                                                        │
│ assign        │ tests/ptb_files/parsing/valid_types.ptb │ c 0u32                                                        │
│ assign        │ tests/ptb_files/parsing/valid_types.ptb │ d 0u64                                                        │
│ assign        │ tests/ptb_files/parsing/valid_types.ptb │ e 0u128                                                       │
│ assign        │ tests/ptb_files/parsing/valid_types.ptb │ f 0u256                                                       │
│ assign        │ tests/ptb_files/parsing/valid_types.ptb │ a 0x0u8                                                       │
│ assign        │ tests/ptb_files/parsing/valid_types.ptb │ b 0x0u16                                                      │
│ assign        │ tests/ptb_files/parsing/valid_types.ptb │ c 0x0u32                                                      │
│ assign        │ tests/ptb_files/parsing/valid_types.ptb │ d 0x0u64                                                      │
│ assign        │ tests/ptb_files/parsing/valid_types.ptb │ e 0x0u128                                                     │
│ assign        │ tests/ptb_files/parsing/valid_types.ptb │ f 0x0u256                                                     │
│ make_move_vec │ tests/ptb_files/parsing/valid_types.ptb │ <std::option::Option<std::option::Option<vector<u8>>>> [none] │
│ make_move_vec │ tests/ptb_files/parsing/valid_types.ptb │ <std::option::Option<vector<u256>>> [vector[]]                │
│ gas_budget    │ tests/ptb_files/parsing/valid_types.ptb │ 1                                                             │
│ preview       │ console                                 │ true                                                          │
╰───────────────┴─────────────────────────────────────────┴───────────────────────────────────────────────────────────────╯
 === PARSED INPUT COMMANDS === 
cmd: MakeMoveVec(Spanned { span: Span { start: 0, end: 9, arg_idx: 0, file_scope: FileScope { file_command_index: 0, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: Address }, Spanned { span: Span { start: 0, end: 6, arg_idx: 1, file_scope: FileScope { file_command_index: 0, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: [Spanned { span: Span { start: 2, end: 5, arg_idx: 1, file_scope: FileScope { file_command_index: 0, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: Address(0x1) }] })
cmd: MakeMoveVec(Spanned { span: Span { start: 0, end: 6, arg_idx: 0, file_scope: FileScope { file_command_index: 1, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: Bool }, Spanned { span: Span { start: 0, end: 13, arg_idx: 1, file_scope: FileScope { file_command_index: 1, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: [Spanned { span: Span { start: 1, end: 5, arg_idx: 1, file_scope: FileScope { file_command_index: 1, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: Bool(true) }, Spanned { span: Span { start: 7, end: 12, arg_idx: 1, file_scope: FileScope { file_command_index: 1, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: Bool(false) }] })
cmd: MakeMoveVec(Spanned { span: Span { start: 0, end: 4, arg_idx: 0, file_scope: FileScope { file_command_index: 2, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: U8 }, Spanned { span: Span { start: 0, end: 3, arg_idx: 1, file_scope: FileScope { file_command_index: 2, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: [Spanned { span: Span { start: 1, end: 2, arg_idx: 1, file_scope: FileScope { file_command_index: 2, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: U64(0) }] })
cmd: MakeMoveVec(Spanned { span: Span { start: 0, end: 5, arg_idx: 0, file_scope: FileScope { file_command_index: 3, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: U16 }, Spanned { span: Span { start: 0, end: 3, arg_idx: 1, file_scope: FileScope { file_command_index: 3, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: [Spanned { span: Span { start: 1, end: 2, arg_idx: 1, file_scope: FileScope { file_command_index: 3, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: U64(0) }] })
cmd: MakeMoveVec(Spanned { span: Span { start: 0, end: 5, arg_idx: 0, file_scope: FileScope { file_command_index: 4, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: U32 }, Spanned { span: Span { start: 0, end: 3, arg_idx: 1, file_scope: FileScope { file_command_index: 4, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: [Spanned { span: Span { start: 1, end: 2, arg_idx: 1, file_scope: FileScope { file_command_index: 4, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: U64(0) }] })
cmd: MakeMoveVec(Spanned { span: Span { start: 0, end: 5, arg_idx: 0, file_scope: FileScope { file_command_index: 5, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: U64 }, Spanned { span: Span { start: 0, end: 3, arg_idx: 1, file_scope: FileScope { file_command_index: 5, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: [Spanned { span: Span { start: 1, end: 2, arg_idx: 1, file_scope: FileScope { file_command_index: 5, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: U64(0) }] })
cmd: MakeMoveVec(Spanned { span: Span { start: 0, end: 6, arg_idx: 0, file_scope: FileScope { file_command_index: 6, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: U128 }, Spanned { span: Span { start: 0, end: 3, arg_idx: 1, file_scope: FileScope { file_command_index: 6, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: [Spanned { span: Span { start: 1, end: 2, arg_idx: 1, file_scope: FileScope { file_command_index: 6, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: U64(0) }] })
cmd: MakeMoveVec(Spanned { span: Span { start: 0, end: 6, arg_idx: 0, file_scope: FileScope { file_command_index: 7, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: U256 }, Spanned { span: Span { start: 0, end: 3, arg_idx: 1, file_scope: FileScope { file_command_index: 7, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: [Spanned { span: Span { start: 1, end: 2, arg_idx: 1, file_scope: FileScope { file_command_index: 7, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: U64(0) }] })
cmd: MakeMoveVec(Spanned { span: Span { start: 0, end: 12, arg_idx: 0, file_scope: FileScope { file_command_index: 8, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: Vector(U8) }, Spanned { span: Span { start: 0, end: 11, arg_idx: 1, file_scope: FileScope { file_command_index: 8, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: [Spanned { span: Span { start: 7, end: 10, arg_idx: 1, file_scope: FileScope { file_command_index: 8, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: Vector([Spanned { span: Span { start: 8, end: 9, arg_idx: 1, file_scope: FileScope { file_command_index: 8, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: U64(0) }]) }] })
cmd: MakeMoveVec(Spanned { span: Span { start: 0, end: 14, arg_idx: 0, file_scope: FileScope { file_command_index: 9, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: Vector(U256) }, Spanned { span: Span { start: 0, end: 11, arg_idx: 1, file_scope: FileScope { file_command_index: 9, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: [Spanned { span: Span { start: 7, end: 10, arg_idx: 1, file_scope: FileScope { file_command_index: 9, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: Vector([Spanned { span: Span { start: 8, end: 9, arg_idx: 1, file_scope: FileScope { file_command_index: 9, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: U64(0) }]) }] })
cmd: Assign(Spanned { span: Span { start: 0, end: 1, arg_idx: 0, file_scope: FileScope { file_command_index: 10, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: "a" }, Some(Spanned { span: Span { start: 0, end: 3, arg_idx: 1, file_scope: FileScope { file_command_index: 10, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: U8(0) }))
cmd: Assign(Spanned { span: Span { start: 0, end: 1, arg_idx: 0, file_scope: FileScope { file_command_index: 11, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: "b" }, Some(Spanned { span: Span { start: 0, end: 4, arg_idx: 1, file_scope: FileScope { file_command_index: 11, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: U16(0) }))
cmd: Assign(Spanned { span: Span { start: 0, end: 1, arg_idx: 0, file_scope: FileScope { file_command_index: 12, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: "c" }, Some(Spanned { span: Span { start: 0, end: 4, arg_idx: 1, file_scope: FileScope { file_command_index: 12, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: U32(0) }))
cmd: Assign(Spanned { span: Span { start: 0, end: 1, arg_idx: 0, file_scope: FileScope { file_command_index: 13, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: "d" }, Some(Spanned { span: Span { start: 0, end: 4, arg_idx: 1, file_scope: FileScope { file_command_index: 13, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: U64(0) }))
cmd: Assign(Spanned { span: Span { start: 0, end: 1, arg_idx: 0, file_scope: FileScope { file_command_index: 14, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: "e" }, Some(Spanned { span: Span { start: 0, end: 5, arg_idx: 1, file_scope: FileScope { file_command_index: 14, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: U128(0) }))
cmd: Assign(Spanned { span: Span { start: 0, end: 1, arg_idx: 0, file_scope: FileScope { file_command_index: 15, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: "f" }, Some(Spanned { span: Span { start: 0, end: 5, arg_idx: 1, file_scope: FileScope { file_command_index: 15, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: U256(U256(0)) }))
cmd: Assign(Spanned { span: Span { start: 0, end: 1, arg_idx: 0, file_scope: FileScope { file_command_index: 16, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: "a" }, Some(Spanned { span: Span { start: 0, end: 5, arg_idx: 1, file_scope: FileScope { file_command_index: 16, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: U8(0) }))
cmd: Assign(Spanned { span: Span { start: 0, end: 1, arg_idx: 0, file_scope: FileScope { file_command_index: 17, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: "b" }, Some(Spanned { span: Span { start: 0, end: 6, arg_idx: 1, file_scope: FileScope { file_command_index: 17, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: U16(0) }))
cmd: Assign(Spanned { span: Span { start: 0, end: 1, arg_idx: 0, file_scope: FileScope { file_command_index: 18, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: "c" }, Some(Spanned { span: Span { start: 0, end: 6, arg_idx: 1, file_scope: FileScope { file_command_index: 18, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: U32(0) }))
cmd: Assign(Spanned { span: Span { start: 0, end: 1, arg_idx: 0, file_scope: FileScope { file_command_index: 19, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: "d" }, Some(Spanned { span: Span { start: 0, end: 6, arg_idx: 1, file_scope: FileScope { file_command_index: 19, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: U64(0) }))
cmd: Assign(Spanned { span: Span { start: 0, end: 1, arg_idx: 0, file_scope: FileScope { file_command_index: 20, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: "e" }, Some(Spanned { span: Span { start: 0, end: 7, arg_idx: 1, file_scope: FileScope { file_command_index: 20, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: U128(0) }))
cmd: Assign(Spanned { span: Span { start: 0, end: 1, arg_idx: 0, file_scope: FileScope { file_command_index: 21, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: "f" }, Some(Spanned { span: Span { start: 0, end: 7, arg_idx: 1, file_scope: FileScope { file_command_index: 21, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: U256(U256(0)) }))
cmd: MakeMoveVec(Spanned { span: Span { start: 0, end: 54, arg_idx: 0, file_scope: FileScope { file_command_index: 22, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: Struct(ParsedStructType { fq_name: ParsedFqName { module: ParsedModuleId { address: Named("std"), name: "option" }, name: "Option" }, type_args: [Struct(ParsedStructType { fq_name: ParsedFqName { module: ParsedModuleId { address: Named("std"), name: "option" }, name: "Option" }, type_args: [Vector(U8)] })] }) }, Spanned { span: Span { start: 0, end: 6, arg_idx: 1, file_scope: FileScope { file_command_index: 22, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: [Spanned { span: Span { start: 1, end: 5, arg_idx: 1, file_scope: FileScope { file_command_index: 22, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: Option(Spanned { span: Span { start: 1, end: 5, arg_idx: 1, file_scope: FileScope { file_command_index: 22, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: None }) }] })
cmd: MakeMoveVec(Spanned { span: Span { start: 0, end: 35, arg_idx: 0, file_scope: FileScope { file_command_index: 23, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: Struct(ParsedStructType { fq_name: ParsedFqName { module: ParsedModuleId { address: Named("std"), name: "option" }, name: "Option" }, type_args: [Vector(U256)] }) }, Spanned { span: Span { start: 0, end: 10, arg_idx: 1, file_scope: FileScope { file_command_index: 23, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: [Spanned { span: Span { start: 7, end: 9, arg_idx: 1, file_scope: FileScope { file_command_index: 23, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: Vector([]) }] })
cmd: GasBudget(Spanned { span: Span { start: 0, end: 1, arg_idx: 0, file_scope: FileScope { file_command_index: 24, name: "tests/ptb_files/parsing/valid_types.ptb", name_index: 0 } }, value: 1 })
cmd: Preview(Spanned { span: Span { start: 0, end: 4, arg_idx: 0, file_scope: FileScope { file_command_index: 1, name: "console", name_index: 0 } }, value: Bool(true) })
 === BUILT PTB === 
Input 0: Pure([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1])
Input 1: Pure([1])
Input 2: Pure([0])
Input 3: Pure([0, 0, 0, 0, 0, 0, 0, 0])
Input 4: Pure([1, 0, 0, 0, 0, 0, 0, 0, 0])
Command 0: MakeMoveVec(Someaddress,[Input(0)])
Command 1: MakeMoveVec(Somebool,[Input(1),Input(2)])
Command 2: MakeMoveVec(Someu8,[Input(3)])
Command 3: MakeMoveVec(Someu16,[Input(3)])
Command 4: MakeMoveVec(Someu32,[Input(3)])
Command 5: MakeMoveVec(Someu64,[Input(3)])
Command 6: MakeMoveVec(Someu128,[Input(3)])
Command 7: MakeMoveVec(Someu256,[Input(3)])
Command 8: MakeMoveVec(Somevector<u8>,[Input(4)])
Command 9: MakeMoveVec(Somevector<u256>,[Input(4)])
Command 10: MakeMoveVec(Some0x1::option::Option<0x1::option::Option<vector<u8>>>,[Input(2)])
Command 11: MakeMoveVec(Some0x1::option::Option<vector<u256>>,[Input(2)])
